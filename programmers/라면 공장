#include <string>
#include <vector>
#include <queue>
using namespace std;

int solution(int stock, vector<int> dates, vector<int> supplies, int k) {
    int answer = 0;
    int idx = 0;
    priority_queue<int> flour;
    
    // k-1일까지 사용할 밀가루를 공급받지 못할 동안 while문 진행
    while(stock < k){
        // 현재 남아있는 밀가루 stock 이전에 공급받을 수 있다면 우선순위 큐에 넣는다.
        // idx += 1을 해줘서 공급받은 밀가루는 큐에 넣지 못하도록 한다.
        for(int i = idx; i<dates.size(); i++){
            if(dates[i] <= stock) {
                flour.push(supplies[i]);
                idx += 1;
            }
            // 남은 밀가루를 다 쓰기 이전에 공급받을 수 없는 경우
            else break;
        }
        // 맥스힙(우선순위 큐)에 넣어놨던 공급받을 밀가루 가져옴
        // 가장 많은 양의 밀가루가 나오게 하여, 공급횟수 최소화한다.
        stock += flour.top();
        flour.pop();
        answer += 1;
    }
    return answer;
}
