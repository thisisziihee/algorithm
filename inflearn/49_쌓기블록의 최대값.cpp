/*
현수는 블록놀이를 좋아합니다. 현수에게 정면에서 본 단면과 오른쪽 측면에서 본 단면을 주고 최대 블록개수를 사용하여 
정면과 오른쪽 측면에서 본 모습으로 블록을 쌓으라 했습니다. 현수가 블록을 쌓는데 사용해야 할 최대 개수를 출력하는 프로그램을 작성하세요.

정면에서의 높이 정보와 오른쪽 측면에서의 높이정보가 주어지면 사용할 수 있는 블록의 쵀대 개수를 출력하세요.

▣ 입력설명 : 첫 줄에 블록의 크기 N(3<=N<=10)이 주어집니다. 블록이 크기는 정사각형 N*N입니다.
			  두 번째 줄에 N개의 정면에서의 높이 정보가 왼쪽 정보부터 주어집니다.
			  세 번째 줄에 N개의 오른쪽 측면 높이 정보가 앞쪽부터 주어집니다.
			  블록의 높이는 10 미만입니다.
▣ 출력설명 : 첫 줄에 블록의 최대 개수를 출력합니다.
*/

#include<stdio.h>
int a[11][11];	// 블록을 위에서 본 배열
int b[11];		//입력되는 정면배열, 측면 배열
int main() {
	int n, i, j, sum = 0;
	scanf("%d", &n);

		// 정면에서 보는 높이 배열
	for (i = 1; i <= n; i++) { scanf("%d", &b[i]); }
	
	for (i = 1; i <= n; i++) {
		for (j = 1; j <= n; j++) {
				// 열이 고정되고 행을 움직이면서 정면에서 보는 높이배열에 맞게 함
			a[j][i] = b[i];
		}
	}
	
	for (i = 1; i <= n; i++) { scanf("%d", &b[i]); }
	for (i = 1; i <= n; i++) {
		for (j = 1; j <= n; j++) {
				// 행을 고정하고 열을 움직이면서 측면배열의 정보와 맞춘다.
			if (a[i][j] > b[i]){
				a[i][j] = b[i];
			}
		}
	}

	for (i = 1; i <= n; i++) {
		for (j = 1; j <= n; j++) {
			sum += a[i][j];
		}
	}
	printf("%d", sum);
}	
