/*
카운셀러로 일하고 있는 현수는 오늘부터 N+1일째 되는 날 휴가를 가기 위해서, 남은 N일 동안 최대한 많은 상담을 해서 휴가비를 넉넉히 만들어 휴가를 떠나려 한다.
현수는 비서에게 최대한 많은 상담을 잡으라고 부탁을 했고, 비서는 하루에 하나씩 서로 다른 사람의 상담을 잡아놓았다.
각각의 상담은 상담을 완료하는데 걸리는 기간 Ti와 상담을 했을 때 받을 수 있는 금액 Pi로 이루어져 있다.

N = 7인 경우에 다음과 같은 상담 일정표를 보자.
	1일 2일 3일 4일 5일 6일 7일
Ti   4   2   3   3   2   2   1
Pi  20  10  15  20  30  20  10

1일에 잡혀있는 상담은 총 4일이 걸리며, 상담했을 때 받을 수 있는 금액은 20이다. 5일에 잡혀있는 상담은 총 2일이 걸리며, 받을 수 있는 금액은 30이다.
상담을 하는데 필요한 기간은 1일보다 클 수 있기 때문에, 모든 상담을 할 수는 없다. 
예를 들어서 1일에 상담을 하게 되면, 2일, 3일, 4일에 있는 상담은 할 수 없게 된다. 2일에 있는 상담을 하게 되면, 3일에 잡혀있는 상담은 할 수 없다.
휴가를 떠나기 전에 할 수 있는 상담의 최대 이익은 1일, 5일, 7일에 있는 상담을 하는 것이며, 이때의 이익은 20+30+10=60이다.
현수가 휴가를 가기 위해 얻을 수 있는 최대 수익을 구하는 프로그램을 작성하시오.*/#include<stdio.h>
int n, T[20], P[20], res = 0;
void DFS(int L, int sum) {
	if (L == n + 1) {
		if (sum > res) res = sum;
	}
	else {
		// 상담 일자가 휴가 전까지 끝나면 상담 진행
		if (L + T[L] <= n + 1) DFS(L + T[L], sum + P[L]);
		// 그렇지 않다면 그냥 다음 날로 이동
		DFS(L + 1, sum);
	}
}

int main() {
	int i;
	scanf("%d", &n);
	for (i = 1; i <= n; i++) {
		scanf("%d %d", &T[i], &P[i]);
	}
	DFS(1, 0);
	printf("%d\n", res);

	return 0;
}