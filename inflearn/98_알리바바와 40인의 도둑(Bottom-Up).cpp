/*
알리바바는 40인의 도둑으로부터 금화를 훔쳐 도망치고 있습니다. 알리바바는 도망치는 길에 평소에 잘 가지 않던 계곡의 돌다리로 도망가고자 한다.
계곡의 돌다리는 N×N개의 돌들로 구성되어 있다. 각 돌다리들은 높이가 서로 다릅니다.
해당 돌다리를 건널때 돌의 높이 만큼 에너지가 소비됩니다. 이동은 최단거리 이동을 합니다.
즉 현재 지점에서 오른쪽 또는 아래쪽으로만 이동해야 합니다.
N*N의 계곡의 돌다리 격자정보가 주어지면 (1, 1)격자에서 (N, N)까지 가는데 드는 에너지의 최소량을 구하는 프로그램을 작성하세요.

만약 N=3이고, 계곡의 돌다리 격자 정보가 다음과 같다면
3
3 3 5
2 3 4
6 5 2
(1, 1)좌표에서 (3, 3)좌표까지 가는데 드는 최소 에너지는 3+2+3+4+2=14이다.

▣ 입력설명
첫 번째 줄에는 자연수 N(1<=N<=20)이 주어진다.
두 번째 줄부터 계곡의 N*N 격자의 돌다리 높이(10보다 작은 자연수) 정보가 주어진다.
*/

#include <bits/stdc++.h>

using namespace std;

int board[21][21];
int dy[21][21];

int n, minn = 2147000000;

int main() {
	ios_base::sync_with_stdio(false);
	int i, j;
	cin >> n;

	for (i = 0; i < n; i++) {
		for (j = 0; j < n; j++) {
			cin >> board[i][j];
		}
	}
	dy[0][0] = board[0][0];


	// 0,0 위치에서 n,n위치까지 최소 에너지를 갖기 위해서는 오른쪽이나 아래로만 움직여야 최소 이동경로가 나온다.
	// 가장자리는 어차피 0,0 시작점에서 움직이게 되므로 미리 값을 구해준다.
	for (i = 1; i < n; i++) {
		dy[0][i] = dy[0][i - 1] + board[0][i];
		dy[i][0] = dy[i - 1][0] + board[i][0];
	}

	// 가장자리를 제외한 1,1 위치부터 시작하여 윗쪽 값과 왼쪽 값 중에 최소값을 구하고 자신의 에너지량을 더해준다.
	// 계속 반복하여 n-1. n-1까지 누적 최솟값을 구한다.
	for (i = 1; i < n; i++) {
		for (j = 1; j < n; j++) {
			dy[i][j] = min(dy[i - 1][j], dy[i][j - 1]) + board[i][j];
		}
	}

	cout << dy[n - 1][n - 1] << endl;
	return 0;
}